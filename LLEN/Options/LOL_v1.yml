# general settings
name: LLEN_LOL_v1
model_type: ImageCleanModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    dataroot_gt: data/LOLv1/Train/target
    dataroot_lq: data/LOLv1/Train/input
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8

    ### Progressive training“渐进式训练”，训练过程从较小的图像块开始，逐渐进展到更大的尺寸。更适合模型需要在各种图像分辨率下表现良好的场景。
    # mini_batch_sizes: [8,5,4,2,1,1]             # Batch size per gpu   
    # iters: [2300,1600,1200,900,900,600] #[46000,32000,24000,18000,18000,12000] #`iters` 提供了根据训练阶段或数据集特征调整训练细节的灵活性。
    # gt_size: 384   # Max patch size for progressive training
    # gt_sizes: [128,160,192,256,320,384]  # Patch sizes for progressive training.
    # ### ------------------------------------------------------------

    ### Training on single fixed-patch size 128x128-固定大小的训练最适合更受控制的环境或计算资源有限的情况
    mini_batch_sizes: [8]   
    iters: [30000]
    gt_size: 128   
    gt_sizes: [128]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: data/LOLv1/Test/target
    dataroot_lq: data/LOLv1/Test/input
    io_backend:
      type: disk

# network structures
network_g:
  type: LLEN
  in_channels: 3
  out_channels: 3
  n_feat: 40
  stage: 1
  num_blocks: [2,2,2]


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings**`total_iter` 通常是指训练过程将在所有批次和时期运行的迭代总数。 它代表从开始到结束的总训练长度。
train:
  total_iter: 15000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [4600, 10400]
    restart_weights: [1,1]
    eta_mins: [0.0003,0.000001]   
  
  mixing_augs:
    mixup: true
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: Adam
    lr: !!float 2e-4
    # weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  window_size: 4
  val_freq: !!float 1e2
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 500
  save_checkpoint_freq: !!float 1e2
  use_tb_logger: true
  wandb:
    project: low_light
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
